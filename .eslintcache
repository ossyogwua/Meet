[{"C:\\Users\\ossyo\\meet\\src\\index.js":"1","C:\\Users\\ossyo\\meet\\src\\reportWebVitals.js":"2","C:\\Users\\ossyo\\meet\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\ossyo\\meet\\src\\App.js":"4","C:\\Users\\ossyo\\meet\\src\\components\\EventList.js":"5","C:\\Users\\ossyo\\meet\\src\\components\\NumberOfEvents.js":"6","C:\\Users\\ossyo\\meet\\src\\components\\CitySearch.js":"7","C:\\Users\\ossyo\\meet\\src\\api.js":"8","C:\\Users\\ossyo\\meet\\src\\components\\Event.js":"9","C:\\Users\\ossyo\\meet\\src\\mock-data.js":"10","C:\\Users\\ossyo\\meet\\src\\components\\Alert.js":"11"},{"size":769,"mtime":1707692465142,"results":"12","hashOfConfig":"13"},{"size":377,"mtime":1706682206820,"results":"14","hashOfConfig":"13"},{"size":5201,"mtime":1706682206841,"results":"15","hashOfConfig":"13"},{"size":2205,"mtime":1707173798405,"results":"16","hashOfConfig":"13"},{"size":290,"mtime":1706682206768,"results":"17","hashOfConfig":"13"},{"size":933,"mtime":1707371356269,"results":"18","hashOfConfig":"13"},{"size":2044,"mtime":1707261844775,"results":"19","hashOfConfig":"13"},{"size":3180,"mtime":1707749291267,"results":"20","hashOfConfig":"13"},{"size":683,"mtime":1706682206767,"results":"21","hashOfConfig":"13"},{"size":53793,"mtime":1706682206812,"results":"22","hashOfConfig":"13"},{"size":1256,"mtime":1707235297610,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i35dcn",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\ossyo\\meet\\src\\index.js",[],"C:\\Users\\ossyo\\meet\\src\\reportWebVitals.js",[],["49","50"],"C:\\Users\\ossyo\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\ossyo\\meet\\src\\App.js",["51"],"import React, { useEffect, useState } from \"react\";\r\nimport CitySearch from \"./components/CitySearch\";\r\nimport NumberOfEvents from \"./components/NumberOfEvents\";\r\nimport EventList from \"./components/EventList\";\r\nimport { extractLocations, getEvents } from \"./api\";\r\nimport { InfoAlert, ErrorAlert, WarningAlert } from \"./components/Alert\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [allLocations, setAllLocations] = useState([]);\r\n  const [currentNOE, setCurrentNOE] = useState(32);\r\n  const [currentCity, setCurrentCity] = useState(\"See all cities\");\r\n  const [infoAlert, setInfoAlert] = useState(\"\");\r\n  const [errorAlert, setErrorAlert] = useState(\"\");\r\n  const [warningAlert, setWarningAlert] = useState(\"\");\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const allEvents = await getEvents();\r\n      const filteredEvents =\r\n        currentCity === \"See all cities\"\r\n          ? allEvents\r\n          : allEvents.filter((event) => event.location === currentCity);\r\n      setEvents(filteredEvents.slice(0, currentNOE));\r\n      setAllLocations(extractLocations(allEvents));\r\n    } catch (error) {\r\n      console.error(\"Error fetching events. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.onLine) {\r\n      setWarningAlert(\"\");\r\n    } else {\r\n      setWarningAlert(\"The app is currently not available\");\r\n    }\r\n    fetchData();\r\n  }, [currentCity, currentNOE]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"alerts-container\">\r\n        {infoAlert.length ? <InfoAlert text={infoAlert} /> : null}\r\n        {errorAlert.length ? <ErrorAlert text={errorAlert} /> : null}\r\n        {warningAlert.length ? <WarningAlert text={warningAlert} /> : null}\r\n      </div>\r\n      <div className=\"title-box\">\r\n        <p className=\"title\">Meet App </p>\r\n      </div>\r\n      <CitySearch\r\n        allLocations={allLocations}\r\n        setCurrentCity={setCurrentCity}\r\n        setInfoAlert={setInfoAlert}\r\n      />\r\n      <NumberOfEvents\r\n        setCurrentNOE={setCurrentNOE}\r\n        setErrorAlert={setErrorAlert}\r\n      />\r\n      <EventList events={events} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\ossyo\\meet\\src\\components\\EventList.js",[],"C:\\Users\\ossyo\\meet\\src\\components\\NumberOfEvents.js",[],"C:\\Users\\ossyo\\meet\\src\\components\\CitySearch.js",["52","53"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst CitySearch = ({ allLocations, setCurrentCity, setInfoAlert }) => {\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const filteredLocations = allLocations\r\n      ? allLocations.filter((location) => {\r\n          return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        })\r\n      : [];\r\n\r\n    setQuery(value);\r\n    setSuggestions(filteredLocations);\r\n\r\n    let infoText;\r\n    if (filteredLocations.length === 0) {\r\n      infoText =\r\n        \"We can not find the city you are looking for. Please try another city\";\r\n    } else {\r\n      infoText = \"\";\r\n    }\r\n    setInfoAlert(infoText);\r\n    //console.error(infoText);\r\n  };\r\n\r\n  const handleClicked = (suggestion) => {\r\n    //const value = Event.target.textContent;\r\n    setQuery(suggestion);\r\n    setShowSuggestions(false); // to hide the list\r\n    setCurrentCity(suggestion);\r\n    setInfoAlert(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSuggestions(allLocations);\r\n  }, [`${allLocations}`]);\r\n\r\n  return (\r\n    <div id=\"city-search\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        placeholder=\"Search for a city\"\r\n        value={query}\r\n        onFocus={() => setShowSuggestions(true)}\r\n        onChange={handleInputChanged}\r\n      />\r\n      {showSuggestions ? (\r\n        <ul className=\"suggestions\">\r\n          {suggestions.map((suggestion) => {\r\n            return (\r\n              <li onClick={() => handleClicked(suggestion)} key={suggestion}>\r\n                {suggestion}\r\n              </li>\r\n            );\r\n          })}\r\n          <li\r\n            key=\"See all cities\"\r\n            onClick={() => handleClicked(\"See all cities\")}\r\n          >\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CitySearch;\r\n","C:\\Users\\ossyo\\meet\\src\\api.js",[],"C:\\Users\\ossyo\\meet\\src\\components\\Event.js",[],"C:\\Users\\ossyo\\meet\\src\\mock-data.js",[],"C:\\Users\\ossyo\\meet\\src\\components\\Alert.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":39,"column":6,"nodeType":"60","endLine":39,"endColumn":31,"suggestions":"61"},{"ruleId":"58","severity":1,"message":"62","line":40,"column":6,"nodeType":"60","endLine":40,"endColumn":25,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":40,"column":7,"nodeType":"65","endLine":40,"endColumn":24},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["68"],"React Hook useEffect has a missing dependency: 'allLocations'. Either include it or remove the dependency array. If 'setSuggestions' needs the current value of 'allLocations', you can also switch to useReducer instead of useState and read 'allLocations' in the reducer.",["69"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","TemplateLiteral","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [currentCity, currentNOE, fetchData]",{"range":"74","text":"75"},"Update the dependencies array to be: [allLocations]",{"range":"76","text":"77"},[1433,1458],"[currentCity, currentNOE, fetchData]",[1201,1220],"[allLocations]"]